//문자열(string) : 문자열이 여러 개 모인 것
//"A"
//"Hello World!"

//문자열 변수
//변경가능한 문자열을 저장할 수 있는 변수
//하나의 문자는 char형 변수로 저장
//문자열은 char형 배열로 저장

//NULL 문자 : 문자열의 끝을 나타낸다.
//문자열은 어디서 종료되는지 알 수가 없으므로 표시를 해주어야 한다.

//#include <stdio.h>
//int main() {
//	int i = 0; 
//	char str[4];
//	str[0] = 'a';
//	str[1] = 'b';
//	str[2] = 'c';
//	str[3] = '\0';
//	while (str[i] != '\0') {
//		printf("%c", str[i]);
//		i++;
//	}
//	return 0;
//}

//문자배열의 초기화
//char str[4] = { 'a','b','c','\0' };
			//a b c \0
//char str[4] = "abc";
			//a b c \0
//char str[4] = "abcdef";
			//a b c d
//char str[6] = "abc";
			//a b c \0 \0 \0
//char str[4] = "";
			//\0 \0 \0 \0
//char str[] = "abc";
			//a b c \0

//문자열 출력
//1. 첫 번째 방법
//char str[] = "abc";
//printf("%s", str);

//2. 두 번째 방법
//char str[] = "abc";
//printf(str);

//#include <stdio.h>
//int main() {
//	char str1[6] = "Seoul";
//	char str2[3] = { 'i','s','\0' };
//	char str3[] = "the capital city of Korea."; //공백도 문자열에 포함됨.
//	printf("%s %s %s\n", str1, str2, str3);
//	return 0;
//}
//
//#include <stdio.h>
//int main() {
//	char src[] = "The worst things to eat before you sleep";
//	char dst[100];
//	int i;
//	printf("원본 문자열=%s\n", src);
//	for (i = 0; src[i] != '\0'; i++) {
//		dst[i] = src[i];
//	}
//	dst[i] = '\0';
//	printf(dst);
//	return 0;
//}

//문자배열을 실행시간에 변경
//1. 문자 배열의 각각의 원소를 개별적으로 변경
//str[0] = 'W';
//str[1] = 'O';

//2. strcpy() 함수를 사용하여 문자열을 문자 배열에 복사
//strcpy(str, "World");

//문자열 상수
//문자열 상수는 메모리 영역 중에서 텍스트 세그먼트(text segment)에 저장
//char* p = "HelloWorld";
	//*p가 할당되는 메모리 공간은 : 데이터 세그먼트
	//(값을 변경할 수 있는 메모리 영역에 저장)
	//"HelloWorld"가 할당되는 메모리 공간은 : 텍스트 세그먼트
	//값을 읽기만하고 변경할 수 없는 메모리 영역

//strcpy(p, "goodbye"); //p를 통해 텍스트 세그먼트에 문자를 저장하려면
								//오류발생
//p = "Goodbye";

#include <stdio.h>
int main() {
	char* p = "HelloWorld";
	printf("%s \n", p); //HelloWorld 출력

	p = "Welcome to C World!"; //가능
	printf("%s \n", p); //Welcome to C World! 출력

	p = "Goodbye"; //가능
	printf("%s \n", p); //Goodbye 출력
	//p[0] = 'a'; //오류가 발생한다.

	return 0;
}
